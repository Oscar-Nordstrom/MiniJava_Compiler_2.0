digraph {
n0 [label="Goal:"];
n1 [label="MainClass:"];
n2 [label="Identifier:semantic_method_call_in_boolean_expression"];
n1 -> n2
n3 [label="Identifier:a"];
n1 -> n3
n4 [label="PrintlnStatement:"];
n5 [label="ExpressionX2:"];
n6 [label="NewIdentif:"];
n7 [label="Identifier:A"];
n6 -> n7
n5 -> n6
n8 [label="Identifier:a2"];
n5 -> n8
n4 -> n5
n1 -> n4
n0 -> n1
n9 [label="ClassList:"];
n10 [label="ClassDeclaration:"];
n11 [label="Identifier:A"];
n10 -> n11
n12 [label="VarDeclarationList:"];
n13 [label="VarDeclaration:"];
n14 [label="TYPE:BOOLEAN"];
n13 -> n14
n15 [label="Identifier:b"];
n13 -> n15
n12 -> n13
n10 -> n12
n16 [label="MethodDeclarationList:"];
n17 [label="MethodDeclarationArguments:"];
n18 [label="Identifier:A"];
n17 -> n18
n19 [label="Identifier:a1"];
n17 -> n19
n20 [label="Argumenr:"];
n21 [label="TYPE:INT"];
n20 -> n21
n22 [label="Identifier:num"];
n20 -> n22
n17 -> n20
n23 [label="ArgumentList:"];
n17 -> n23
n24 [label="MethodBodyVar:"];
n25 [label="VarDeclaration:"];
n26 [label="TYPE:INT"];
n25 -> n26
n27 [label="Identifier:num_aux"];
n25 -> n27
n24 -> n25
n28 [label="MethodBodyStat:"];
n29 [label="IfElseStatement:"];
n30 [label="ExpressionX2:"];
n31 [label="This:this"];
n30 -> n31
n32 [label="Identifier:a3"];
n30 -> n32
n29 -> n30
n33 [label="EqualStatement:"];
n34 [label="Identifier:num_aux"];
n33 -> n34
n35 [label="INT:1"];
n33 -> n35
n29 -> n33
n36 [label="IfElseStatement:"];
n37 [label="ExpressionOp:LessThanExpression"];
n38 [label="ExpressionX2:"];
n39 [label="This:this"];
n38 -> n39
n40 [label="Identifier:a2"];
n38 -> n40
n37 -> n38
n41 [label="INT:1"];
n37 -> n41
n36 -> n37
n42 [label="EqualStatement:"];
n43 [label="Identifier:num_aux"];
n42 -> n43
n44 [label="ExpressionOp:MultExpression"];
n45 [label="Identifier:num"];
n44 -> n45
n46 [label="ExpressionX2:"];
n47 [label="This:this"];
n46 -> n47
n48 [label="Identifier:a2"];
n46 -> n48
n44 -> n46
n42 -> n44
n36 -> n42
n49 [label="EqualStatement:"];
n50 [label="Identifier:num_aux"];
n49 -> n50
n51 [label="INT:0"];
n49 -> n51
n36 -> n49
n29 -> n36
n28 -> n29
n24 -> n28
n17 -> n24
n52 [label="This:this"];
n17 -> n52
n53 [label="RETURN_TYPE:"];
n54 [label="This:this"];
n53 -> n54
n17 -> n53
n16 -> n17
n55 [label="MethodDeclaration:"];
n56 [label="TYPE:INT"];
n55 -> n56
n57 [label="Identifier:a2"];
n55 -> n57
n58 [label="MethodBodyStat:"];
n59 [label="EqualStatement:"];
n60 [label="Identifier:b"];
n59 -> n60
n61 [label="ExpressionX2:"];
n62 [label="ExpressionX:"];
n63 [label="This:this"];
n62 -> n63
n64 [label="Identifier:a1"];
n62 -> n64
n65 [label="ExpressionX2:"];
n66 [label="ExpressionX:"];
n67 [label="This:this"];
n66 -> n67
n68 [label="Identifier:a1"];
n66 -> n68
n69 [label="INT:2"];
n66 -> n69
n70 [label="ExpressionList_Comma:"];
n66 -> n70
n65 -> n66
n71 [label="Identifier:a4"];
n65 -> n71
n62 -> n65
n72 [label="ExpressionList_Comma:"];
n62 -> n72
n61 -> n62
n73 [label="Identifier:a3"];
n61 -> n73
n59 -> n61
n58 -> n59
n74 [label="MethodBodyVar:"];
n75 [label="VarDeclaration:"];
n76 [label="TYPE:INT"];
n75 -> n76
n77 [label="Identifier:ret"];
n75 -> n77
n74 -> n75
n58 -> n74
n78 [label="MethodBodyStat:"];
n79 [label="IfElseStatement:"];
n80 [label="Identifier:b"];
n79 -> n80
n81 [label="EqualStatement:"];
n82 [label="Identifier:ret"];
n81 -> n82
n83 [label="INT:1"];
n81 -> n83
n79 -> n81
n84 [label="EqualStatement:"];
n85 [label="Identifier:ret"];
n84 -> n85
n86 [label="INT:0"];
n84 -> n86
n79 -> n84
n78 -> n79
n58 -> n78
n55 -> n58
n87 [label="Identifier:ret"];
n55 -> n87
n88 [label="RETURN_TYPE:"];
n89 [label="Identifier:ret"];
n88 -> n89
n55 -> n88
n16 -> n55
n90 [label="MethodDeclaration:"];
n91 [label="TYPE:BOOLEAN"];
n90 -> n91
n92 [label="Identifier:a3"];
n90 -> n92
n93 [label="MethodBodyEmpty:"];
n90 -> n93
n94 [label="BOOLEAN:true"];
n90 -> n94
n95 [label="RETURN_TYPE:"];
n96 [label="BOOLEAN:true"];
n95 -> n96
n90 -> n95
n16 -> n90
n97 [label="MethodDeclaration:"];
n98 [label="TYPE:INT"];
n97 -> n98
n99 [label="Identifier:a4"];
n97 -> n99
n100 [label="MethodBodyEmpty:"];
n97 -> n100
n101 [label="INT:1"];
n97 -> n101
n102 [label="RETURN_TYPE:"];
n103 [label="INT:1"];
n102 -> n103
n97 -> n102
n16 -> n97
n10 -> n16
n9 -> n10
n0 -> n9
}
